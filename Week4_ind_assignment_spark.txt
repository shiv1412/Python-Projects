Query 1:

# File location and type
file_location = "/FileStore/tables/testdatafileindproj.csv"
file_type = "csv"

# CSV options
infer_schema = "false"
first_row_is_header = "false"
delimiter = ","

# The applied options are for CSV files. For other file types, these will be ignored.
df = spark.read.format(file_type) \
  .option("inferSchema", infer_schema) \
  .option("header", first_row_is_header) \
  .option("sep", delimiter) \
  .load(file_location)

display(df)

Query 2:

# Create a view or table

temp_table_name = "testdatafileindproj"

df.createOrReplaceTempView(temp_table_name)

Query 3:

%sql

/* Query the created temp table in a SQL cell */

select * from `testdatafileindproj`

Query 4: 
# With this registered as a temp view, it will only be available to this particular notebook. If you'd like other users to be able to query this table, you can also create a table from the DataFrame.
# Once saved, this table will persist across cluster restarts as well as allow various users across different notebooks to query this data.
# To do so, choose your table name and uncomment the bottom line.

permanent_table_name = "testdatafileindproj"

# df.write.format("parquet").saveAsTable(permanent_table_name)

Query 5:


bluebikes = spark.read.format('csv').options(header='true', inferSchema='true').load('/FileStore/tables/testdatafileindproj.csv')

display(bluebikes)

Query 6: 

# File location and type
file_location = "/FileStore/tables/HPI_AT_BDL_ZIP3.csv"
file_type = "csv"

# CSV options
infer_schema = "false"
first_row_is_header = "false"
delimiter = ","

# The applied options are for CSV files. For other file types, these will be ignored.
df = spark.read.format(file_type) \
  .option("inferSchema", infer_schema) \
  .option("header", first_row_is_header) \
  .option("sep", delimiter) \
  .load(file_location)

display(df)

Query 7:

# Create a view or table

temp_table_name = "HPI_AT_BDL_ZIP3_csv"

df.createOrReplaceTempView(temp_table_name)

Query 8:

%sql

/* Query the created temp table in a SQL cell */

select * from `HPI_AT_BDL_ZIP3_csv`


Query 9:

# With this registered as a temp view, it will only be available to this particular notebook. If you'd like other users to be able to query this table, you can also create a table from the DataFrame.
# Once saved, this table will persist across cluster restarts as well as allow various users across different notebooks to query this data.
# To do so, choose your table name and uncomment the bottom line.

permanent_table_name = "HPI_AT_BDL_ZIP3_csv"

# df.write.format("parquet").saveAsTable(permanent_table_name)

Query 10:

%sql
select * from testdatafileindproj_csv ORDER BY _c1 DESC limit 10;

Query 11:
%sql
select * from testdatafileindproj_csv ORDER BY _c14 ASC limit 10;

Query 12:

%sql
select * from HPI_AT_BDL_ZIP3_csv ORDER BY _c2 DESC limit 10;

Query 13:

%sql
select * from HPI_AT_BDL_ZIP3_csv ORDER BY _c3 DESC limit 10;

